{"version":3,"file":"component---src-templates-blog-post-js-0295c7fd847ba048d7cf.js","mappings":"2KAqDA,IA3CYA,KAAO,IAADC,EAChB,MAAM,OAAEC,IAAWC,EAAAA,EAAAA,gBAAe,aAc5BC,EAAYF,SAAc,QAARD,EAANC,EAAQG,cAAM,IAAAJ,OAAR,EAANA,EAAgBK,IAElC,OACEC,EAAAA,cAAA,OAAKC,UAAU,OACZJ,GACCG,EAAAA,cAAA,OACEE,KAAKP,aAAM,EAANA,EAAQQ,YAAS,GACtBF,UAAU,aACVG,IAAKP,KAGRF,aAAM,EAANA,EAAQQ,YACPH,EAAAA,cAAA,SAAG,cACUA,EAAAA,cAAA,cAASL,EAAOQ,WAAmB,KAE7CR,aAAM,EAANA,EAAQU,cAAe,KAAI,KAE3BV,aAAM,EAANA,EAAQW,UACPN,EAAAA,cAAA,KAAGO,KAAI,yBAAyBZ,aAAM,EAANA,EAAQW,UAAO,KAAU,sCAM3D,C,wGCwCV,UAxEyBE,IAAyC,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,IAArCC,MAAM,SAAEC,EAAQ,KAAEC,EAAI,KAAEC,IAAQV,EAC1D,MAAMW,EAAgB,CACpBJ,KAAwB,QAApBN,EAAES,EAAKC,qBAAa,IAAAV,GAAM,QAANC,EAAlBD,EAAoBW,YAAI,IAAAV,GAAW,QAAXC,EAAxBD,EAA0BW,iBAAS,IAAAV,GAAiB,QAAjBC,EAAnCD,EAAqCW,uBAAe,IAAAV,OAAlC,EAAlBA,EAAsDW,gBAC5DrB,KAAuB,QAAlBW,EAAAK,EAAKC,qBAAa,IAAAN,GAAM,QAANC,EAAlBD,EAAoBO,YAAI,IAAAN,OAAN,EAAlBA,EAA0BZ,MAAG,IAGpC,OACEF,EAAAA,cAACwB,EAAAA,EAAM,KACLxB,EAAAA,cAACyB,EAAAA,EAAG,CAACC,MAAOR,EAAKQ,MAAOrB,YAAaa,EAAKS,UAE1C3B,EAAAA,cAAA,WACEC,UAAU,YACV2B,WAAS,EACTC,SAAS,6BAET7B,EAAAA,cAAA,cACEA,EAAAA,cAAA,MAAI8B,SAAS,aAAYC,EAAAA,EAAAA,IAAMb,EAAKQ,QAEpC1B,EAAAA,cAAA,SAAIkB,EAAKc,OAGRb,aAAa,EAAbA,EAAeJ,OACdf,EAAAA,cAACiC,EAAAA,EAAW,CACVC,MAAOf,EAAcJ,KACrBb,IAAKiB,EAAcjB,IACnBiC,MAAO,CAAEC,aAAc,SAK1BlB,EAAKmB,SACNrC,EAAAA,cAAA,WAAS8B,SAAS,gBAAeC,EAAAA,EAAAA,IAAMb,EAAKmB,UAG9CrC,EAAAA,cAAA,WAEAA,EAAAA,cAAA,cACEA,EAAAA,cAACP,EAAAA,EAAG,QAIRO,EAAAA,cAAA,OAAKC,UAAU,iBACbD,EAAAA,cAAA,MACEmC,MAAO,CACLG,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX1C,EAAAA,cAAA,UACGgB,GACChB,EAAAA,cAAC2C,EAAAA,KAAI,CAACC,GAAI5B,EAAS6B,IAAKC,IAAI,QAAO,MAC9Bf,EAAAA,EAAAA,IAAMf,EAASU,SAKxB1B,EAAAA,cAAA,UACGiB,GACCjB,EAAAA,cAAC2C,EAAAA,KAAI,CAACC,GAAI3B,EAAK4B,IAAKC,IAAI,SACrBf,EAAAA,EAAAA,IAAMd,EAAKS,OAAO,SAMtB,C","sources":["webpack://gatsby-starter-wordpress-blog/./src/components/bio.js","webpack://gatsby-starter-wordpress-blog/./src/templates/blog-post.js"],"sourcesContent":["/**\r\n * Bio component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.com/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst Bio = () => {\r\n  const { author } = useStaticQuery(graphql`\r\n    query BioQuery {\r\n      # if there was more than one user, this would need to be filtered\r\n      author: wpUser {\r\n        firstName\r\n        twitter: name\r\n        description\r\n        avatar {\r\n          url\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  const avatarUrl = author?.avatar?.url\r\n\r\n  return (\r\n    <div className=\"bio\">\r\n      {avatarUrl && (\r\n        <img\r\n          alt={author?.firstName || ``}\r\n          className=\"bio-avatar\"\r\n          src={avatarUrl}\r\n        />\r\n      )}\r\n      {author?.firstName && (\r\n        <p>\r\n          Written by <strong>{author.firstName}</strong>\r\n          {` `}\r\n          {author?.description || null}\r\n          {` `}\r\n          {author?.twitter && (\r\n            <a href={`https://twitter.com/${author?.twitter || ``}`}>\r\n              You should follow them on Twitter\r\n            </a>\r\n          )}\r\n        </p>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Bio\r\n","import React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\nimport { GatsbyImage } from \"gatsby-plugin-image\"\r\nimport parse from \"html-react-parser\"\r\n\r\n// We're using Gutenberg so we need the block styles\r\n// these are copied into this project due to a conflict in the postCSS\r\n// version used by the Gatsby and @wordpress packages that causes build\r\n// failures.\r\n// @todo update this once @wordpress upgrades their postcss version\r\nimport \"../css/@wordpress/block-library/build-style/style.css\"\r\nimport \"../css/@wordpress/block-library/build-style/theme.css\"\r\n\r\nimport Bio from \"../components/bio\"\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\n\r\nconst BlogPostTemplate = ({ data: { previous, next, post } }) => {\r\n  const featuredImage = {\r\n    data: post.featuredImage?.node?.localFile?.childImageSharp?.gatsbyImageData,\r\n    alt: post.featuredImage?.node?.alt || ``,\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <Seo title={post.title} description={post.excerpt} />\r\n\r\n      <article\r\n        className=\"blog-post\"\r\n        itemScope\r\n        itemType=\"http://schema.org/Article\"\r\n      >\r\n        <header>\r\n          <h1 itemProp=\"headline\">{parse(post.title)}</h1>\r\n\r\n          <p>{post.date}</p>\r\n\r\n          {/* if we have a featured image for this post let's display it */}\r\n          {featuredImage?.data && (\r\n            <GatsbyImage\r\n              image={featuredImage.data}\r\n              alt={featuredImage.alt}\r\n              style={{ marginBottom: 50 }}\r\n            />\r\n          )}\r\n        </header>\r\n\r\n        {!!post.content && (\r\n          <section itemProp=\"articleBody\">{parse(post.content)}</section>\r\n        )}\r\n\r\n        <hr />\r\n\r\n        <footer>\r\n          <Bio />\r\n        </footer>\r\n      </article>\r\n\r\n      <nav className=\"blog-post-nav\">\r\n        <ul\r\n          style={{\r\n            display: `flex`,\r\n            flexWrap: `wrap`,\r\n            justifyContent: `space-between`,\r\n            listStyle: `none`,\r\n            padding: 0,\r\n          }}\r\n        >\r\n          <li>\r\n            {previous && (\r\n              <Link to={previous.uri} rel=\"prev\">\r\n                ← {parse(previous.title)}\r\n              </Link>\r\n            )}\r\n          </li>\r\n\r\n          <li>\r\n            {next && (\r\n              <Link to={next.uri} rel=\"next\">\r\n                {parse(next.title)} →\r\n              </Link>\r\n            )}\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default BlogPostTemplate\r\n\r\nexport const pageQuery = graphql`\r\n  query BlogPostById(\r\n    $id: String!\r\n    $previousPostId: String\r\n    $nextPostId: String\r\n  ) {\r\n    post: wpPost(id: { eq: $id }) {\r\n      id\r\n      excerpt\r\n      content\r\n      title\r\n      date(formatString: \"MMMM DD, YYYY\")\r\n      featuredImage {\r\n        node {\r\n          altText\r\n          localFile {\r\n            childImageSharp {\r\n              gatsbyImageData(\r\n                quality: 100\r\n                placeholder: TRACED_SVG\r\n                layout: FULL_WIDTH\r\n              )\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    previous: wpPost(id: { eq: $previousPostId }) {\r\n      uri\r\n      title\r\n    }\r\n    next: wpPost(id: { eq: $nextPostId }) {\r\n      uri\r\n      title\r\n    }\r\n  }\r\n`\r\n"],"names":["Bio","_author$avatar","author","useStaticQuery","avatarUrl","avatar","url","React","className","alt","firstName","src","description","twitter","href","_ref","_post$featuredImage","_post$featuredImage$n","_post$featuredImage$n2","_post$featuredImage$n3","_post$featuredImage2","_post$featuredImage2$","data","previous","next","post","featuredImage","node","localFile","childImageSharp","gatsbyImageData","Layout","Seo","title","excerpt","itemScope","itemType","itemProp","parse","date","GatsbyImage","image","style","marginBottom","content","display","flexWrap","justifyContent","listStyle","padding","Link","to","uri","rel"],"sourceRoot":""}